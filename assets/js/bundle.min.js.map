{"version":3,"sources":["node_modules/browser-pack/_prelude.js","js/controls/controls.js","js/controls/gamepad.js","js/controls/keyboard.js","js/controls/screen.js","js/game-mode-numplayers.js","js/game-mode-play.js","js/game-mode-title.js","js/game-mode.js","js/game.js","js/main.js","js/wavy-animation.js","node_modules/events/events.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Controls","count","_classCallCheck","this","states","Array","fill","map","_","left","right","action","statesModified","id","key","value","result","s","Object","assign","_controls","GamepadControls","_super","_this","_toConsumableArray","from","navigator","getGamepads","filter","gp","index","forEach","modifyState","axes","buttons","pressed","updateState","_get","_getPrototypeOf","prototype","keyMap","ArrowLeft","prop","ArrowRight","ArrowDown","KeyA","KeyD","KeyS","KeyboardControls","keyCallback","ev","type","window","addEventListener","ScreenControls","element","document","createElement","classList","add","concat","appendChild","buildControl","mousePressedButton","name","remove","_this2","root","newButton","button","checkTouches","targetTouches","preventDefault","setAttribute","passive","_gameMode","PlayerNumberMode","$overlay","$","game","overlay","maxPlayers","config","selectedNumber","selectorItems","text","IMAGINARY","i18n","appendTo","$selector","addClass","toggleClass","input","lastInput","newSelection","find","ctrl","direction","Math","max","min","removeClass","numPlayers","triggerEvent","PlayMode","loadSVGSymbol","shipSymbol","draw","line","stroke","color","width","boat","use","size","center","myBoat","delta","ts","_this$game2","_interopRequireDefault","_wavyAnimation","TitleMode","logoSprite","poly","findOne","pressToStart","textContent","append","animate","duration","wavyStep","animCounter","_events","GameMode","events","emit","_gameModePlay","_gameModeTitle","_gameModeNumplayers","_gamepad","_screen","_keyboard","GradientDescentGame","container","inputs","createInputs","inputsLast","isPaused","modes","currentMode","controls","debugControlsPane","svgDoc","SVG","addTo","nested","useScreenControls","screen","useGamepads","gamepad","useKeyboardControls","keyboard","debugControls","registerMode","continuousGame","transition","setMode","uri","clearStyles","fetch","response","status","statusText","symbol","newSymbol","svg","inputReducer","accInput","curState","values","getStates","reduce","join","lastTs","requestAnimationFrame","gameLoop","readInputs","handleInputs","run","mode","preLoadAssets","modeID","pause","handleExitMode","undefined","clear","innerHTML","handleEnterMode","resume","modeId","event","nextModeId","arguments","callback","on","_game","_main","defaultConfig","defaultLanguage","loadConfig","_callee2","regeneratorRuntime","wrap","_context2","prev","next","sent","json","abrupt","t0","message","stop","_asyncToGenerator","mark","_callee","_context","t1","t2","t3","init","queryStringVariable","translationsDirectory","querySelector","t4","console","error","apply","shape","userOptions","options","xAmplitude","cycles","polygons","originalPlots","plot","maxY","flat","_ref","_slicedToArray","counter","progress","_ref3","_ref4","x","y","sin","PI","pow","objectCreate","create","proto","F","objectKeys","keys","obj","k","hasOwnProperty","push","bind","Function","context","fn","EventEmitter","_eventsCount","_maxListeners","hasDefineProperty","defaultMaxListeners","defineProperty","err","$getMaxListeners","that","_addListener","target","listener","prepend","m","existing","TypeError","newListener","unshift","warned","w","String","emitter","warn","onceWrapper","fired","removeListener","wrapFn","args","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","enumerable","get","set","arg","setMaxListeners","isNaN","getMaxListeners","er","handler","len","doError","isFn","self","listeners","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","removeAllListeners","rawListeners","eventNames","Reflect","ownKeys"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Component that handles gamepad controls\n *\n */\nexport default class Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to handle\n   */\n  constructor(count) {\n    this.states = Array(count)\n      .fill(null)\n      .map(_ => ({\n        left: false,\n        right: false,\n        action: false,\n      }));\n    this.statesModified = false;\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @protected\n   */\n  modifyState(id, key, value) {\n    if (this.states[id][key] !== value) {\n      this.states[id][key] = value;\n      this.statesModified = true;\n    }\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    if (this.statesModified) {\n      const result = this.states;\n      this.states = this.states.map(s => Object.assign({}, s)); // immutability: use cloned array for future changes\n      this.statesModified = false;\n      return result;\n    } else {\n      return this.states;\n    }\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles gamepad controls\n *\n */\nexport default class GamepadControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n  }\n\n  updateState() {\n    // clone the current state such state objects are immutable\n    this.states = [...this.states];\n    Array.from(navigator.getGamepads())\n      .filter(gp => gp !== null && gp.index < this.states.length)\n      .forEach(gp => {\n        this.modifyState(gp.index, \"left\", gp.axes[0] < -0.5);\n        this.modifyState(gp.index, \"right\", gp.axes[0] > 0.5);\n        this.modifyState(gp.index, \"action\", gp.buttons[1].pressed || gp.buttons[2].pressed);\n      });\n  }\n\n  /**\n   * Returns state of all controllers\n   *\n   * State is returned as an array with one object per controller\n   * with properties indicating the state of each button.\n   *\n   * @return {[{\n   *   left: Boolean,\n   *   right: Boolean,\n   *   action: Boolean\n   * }]}\n   */\n  getStates() {\n    this.updateState();\n    return super.getStates();\n  }\n}\n","import Controls from \"./controls\";\n\nconst keyMap = {\n  'ArrowLeft': { id: 0, prop: 'left' },\n  'ArrowRight': { id: 0, prop: 'right' },\n  'ArrowDown': { id: 0, prop: 'action' },\n  'KeyA': { id: 1, prop: 'left' },\n  'KeyD': { id: 1, prop: 'right' },\n  'KeyS': { id: 1, prop: 'action' },\n};\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class KeyboardControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n\n    const keyCallback = ev => {\n      const key = keyMap[ev.code];\n      if (key && key.id < count)\n        this.modifyState(key.id, key.prop, ev.type === 'keydown');\n    };\n\n    window.addEventListener('keydown', keyCallback);\n    window.addEventListener('keyup', keyCallback);\n  }\n}\n","import Controls from \"./controls\";\n\n/**\n * Component that handles on-screen controls\n *\n * Supports both mouse and multitouch input.\n *\n */\nexport default class ScreenControls extends Controls {\n  /**\n   * Constructor\n   *\n   * @param {Number} count\n   *  (Integer) Number of controllers to show\n   */\n  constructor(count) {\n    super(count);\n    this.element = document.createElement('div');\n    this.element.classList.add('screen-controls');\n    this.element.classList.add(`with-${count}-controls`);\n\n    for (let i = 0; i < this.states.length; ++i)\n      this.element.appendChild(this.buildControl(i));\n\n    // Global mouseup handling for all buttons\n    this.mousePressedButton = null;\n    window.addEventListener('mouseup', () => {\n      if (this.mousePressedButton !== null) {\n        this.modifyState(this.mousePressedButton.id, this.mousePressedButton.name, false);\n        this.mousePressedButton.element.classList.remove('active');\n        this.mousePressedButton = null;\n      }\n    });\n  }\n\n  /**\n   * Builds a single on-screen controller\n   *\n   * @private\n   * @param {Number} id\n   *  Zero-based integer index of the controller\n   * @return {HTMLDivElement}\n   */\n  buildControl(id) {\n    const root = document.createElement('div');\n    root.classList.add('screen-control', `screen-control-${id}`);\n\n    const newButton = (name) => {\n      const button = document.createElement('button');\n      button.setAttribute('type', 'button');\n      button.classList.add(name);\n\n      const checkTouches = (ev) => {\n        if (ev.targetTouches.length > 0) {\n          this.modifyState(id, name, true);\n          button.classList.add('active');\n        } else {\n          this.modifyState(id, name, false);\n          button.classList.remove('active');\n        }\n        ev.preventDefault();\n      };\n\n      button.addEventListener('touchstart', checkTouches, { passive: false });\n      button.addEventListener('touchmove', checkTouches, { passive: false });\n      button.addEventListener('touchend', checkTouches, { passive: false });\n      button.addEventListener('touchcancel', checkTouches, { passive: false });\n\n      button.addEventListener('mousedown', () => {\n        this.modifyState(id, name, true);\n        button.classList.add('active');\n        this.mousePressedButton = {\n          id,\n          name,\n          element: button,\n        };\n      });\n\n      return button;\n    };\n\n    root.appendChild(newButton('left'));\n    root.appendChild(newButton('action'));\n    root.appendChild(newButton('right'));\n\n    return root;\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\n\nexport default class PlayerNumberMode extends GameMode {\n  async preLoadAssets() {\n  }\n\n  async handleEnterMode() {\n    const $overlay = $(this.game.overlay);\n    const { maxPlayers } = this.game.config;\n\n    this.selectedNumber = 1;\n    this.selectorItems = {};\n    $('<div class=\"text text-center numPlayers-title\" />')\n      .text(IMAGINARY.i18n.t('choose-num-players'))\n      .appendTo($overlay);\n    const $selector = $('<div class=\"numPlayers-selector\" />')\n      .addClass(`numPlayers-selector-with-${maxPlayers}`)\n      .appendTo($overlay);\n    for (let i = 1; i <= maxPlayers; i += 1) {\n      this.selectorItems[i] = $('<div class=\"item\" />')\n        .addClass(`item-${i}`)\n        .toggleClass('selected', this.selectedNumber === i)\n        .text(i)\n        .appendTo($selector);\n    }\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(input, lastInput) {\n    const { maxPlayers } = this.game.config;\n\n    let newSelection = null;\n    if (input.find((ctrl, i) => (\n      ctrl.direction === -1 && lastInput[i].direction !== -1))) {\n      newSelection = Math.max(1, this.selectedNumber - 1);\n    } else if (input.find((ctrl, i) => (\n      ctrl.direction === 1 && lastInput[i].direction !== 1))) {\n      newSelection = Math.min(maxPlayers, this.selectedNumber + 1);\n    }\n\n    if (newSelection && newSelection !== this.selectedNumber) {\n      this.selectorItems[this.selectedNumber].removeClass('selected');\n      this.selectorItems[newSelection].addClass('selected');\n      this.selectedNumber = newSelection;\n    }\n\n    // If any button was pressed\n    if (input\n      .find((ctrl, i) => ctrl.action && !lastInput[i].action)) {\n      this.game.numPlayers = this.selectedNumber;\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n    // Move boats\n    // Draw bottom\n    // etc...\n  }\n}\n","import GameMode from './game-mode';\n\nexport default class PlayMode extends GameMode {\n  async preLoadAssets() {\n    this.shipSymbol = await this.game.loadSVGSymbol('assets/img/ship.svg');\n  }\n\n  async handleEnterMode() {\n    const { draw, numPlayers } = this.game;\n\n    draw.line(0, 200, 1920, 200).stroke({ color: '#9999ff', width: 2 });\n    this.boat = draw.use(this.shipSymbol)\n      .size(300, 200)\n      .stroke({ color: '#ff0000', width: 2 })\n      .fill('transparent')\n      .center(300, 165);\n    // todo: remove (temporary)\n    window.myBoat = this.boat;\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(input, lastInput) {\n    // Move the boats or check if they're lowering the probe\n  }\n\n  draw(delta, ts) {\n    const { draw, numPlayers } = this.game;\n    // Move boats\n    // Draw bottom\n    // etc...\n  }\n}\n","/* globals IMAGINARY */\nimport GameMode from './game-mode';\nimport WavyAnimation from './wavy-animation';\n\nexport default class TitleMode extends GameMode {\n  async preLoadAssets() {\n    this.logoSprite = await this.game.loadSVGSymbol('assets/img/descent-logo.svg');\n    this.poly = this.logoSprite.findOne('#descent');\n  }\n\n  async handleEnterMode() {\n    const { draw } = this.game;\n    const pressToStart = document.createElement('div');\n    pressToStart.classList.add('blinking', 'text', 'text-center', 'text-vcenter');\n    pressToStart.textContent = IMAGINARY.i18n.t('press-to-start');\n    this.game.overlay.append(pressToStart);\n\n    const gradientLogo = draw.use(this.logoSprite)\n      .size(1200, 400)\n      .stroke({ color: '#00368a', width: 2 })\n      .fill('transparent')\n      .center(1920 / 2, 1080 / 2.5);\n\n    gradientLogo.animate({ duration: 5000 }).stroke({ color: '#34c6ff' });\n    this.wavyStep = WavyAnimation(this.logoSprite, { duration: 3500 });\n\n    this.animCounter = 0;\n  }\n\n  async handleExitMode() {\n    // Cleanup timers, etc. created on handleEnterMode\n  }\n\n  handleInputs(input, lastInput) {\n    // If any button was pressed\n    if (input\n      .find((ctrl, i) => ctrl.action && !lastInput[i].action)) {\n      this.triggerEvent('done');\n    }\n  }\n\n  draw(delta, ts) {\n\n    this.wavyStep(delta, ts);\n  }\n}\n","/* eslint-disable class-methods-use-this,no-unused-vars,no-empty-function */\nimport EventEmitter from 'events';\n\n/**\n * Abstract class for GameMode\n *\n * A GameMode does the actual handling of the input and drawing\n */\nexport default class GameMode {\n  /**\n   * Constructor\n   *\n   * @param {GradientDescentGame} game\n   */\n  constructor(game) {\n    // noinspection JSUnusedGlobalSymbols\n    this.game = game;\n    this.events = new EventEmitter();\n  }\n\n  /**\n   * Preload any external assets that will be needed during the game\n   *\n   * This method runs during game initialization.\n   * @return {Promise<void>}\n   */\n  async preLoadAssets() {\n\n  }\n\n  /**\n   * Called by the game when the mode is entered.\n   *\n   * Can be used to add DOM elements, event handlers and initialize\n   * internal state. Anything done here must be cleaned up in\n   * handleExitMode.\n   */\n  async handleEnterMode() {\n\n  }\n\n  /**\n   * Called by the game when the mode is going to be exited\n   *\n   * Should be used to remove DOM elements, event handlers\n   * or anything else that was created on handleEnterMode.\n   */\n  async handleExitMode() {\n\n  }\n\n  /**\n   * Called once per frame so the mode can handle controller input\n   *\n   * Current input state and the previous one are passed\n   * to help with state change detection.\n   *\n   * Both are arrays with N objects with shape:\n   * - direction {integer}: Either -1, 0 or 1.\n   * - action {bool}\n   *\n   * @param {[{direction: Number, action: Boolean}]} input\n   * @param {[{direction: Number, action: Boolean}]} lastInput\n   */\n  handleInputs(input, lastInput) {\n\n  }\n\n  /**\n   * Called once per frame so the mode can draw based on the game's state\n   *\n   * @param {Number }delta\n   *  Amount of milliseconds since the last call (capped to a maximum)\n   * @param {Number} ts\n   *  Timestamp received via requestAnimationFrame\n   */\n  draw(delta, ts) {\n\n  }\n\n  /**\n   * Triggers an event for the game to handle\n   *\n   * Events can be used to transition to another mode, etc.\n   *\n   * @param {string} name\n   */\n  triggerEvent(name) {\n    this.events.emit(name);\n  }\n}\n","/* globals SVG */\nimport PlayMode from './game-mode-play';\nimport TitleMode from './game-mode-title';\nimport PlayerNumberMode from './game-mode-numplayers';\nimport GamepadControls from \"./controls/gamepad\";\nimport ScreenControls from './controls/screen';\nimport KeyboardControls from \"./controls/keyboard\";\n\n/**\n * The main application\n *\n * This class creates the main UI elements and runs the\n * main game loop (read input, draw).\n *\n * The game can be in one of various modes (see GameMode)\n * which decides how to draw and process input.\n */\nexport default class GradientDescentGame {\n  constructor(container, config) {\n    this.container = container;\n    this.config = config;\n\n    this.inputs = this.createInputs();\n    this.inputsLast = this.createInputs();\n\n    this.isPaused = false;\n    this.modes = {};\n    this.currentMode = null;\n\n    this.controls = {};\n    this.debugControlsPane = null;\n\n    this.numPlayers = this.config.maxPlayers;\n  }\n\n  /**\n   * Initializes the app and downloads any external assets\n   *\n   * @return {Promise<void>}\n   */\n  async init() {\n    this.svgDoc = SVG().addTo(this.container).size(500, 500);\n    this.draw = this.svgDoc.nested();\n\n    this.overlay = document.createElement('div');\n    this.overlay.classList.add('overlay');\n    this.container.append(this.overlay);\n\n    if (this.config.useScreenControls) {\n      this.controls.screen = new ScreenControls(this.config.maxPlayers);\n      this.container.appendChild(this.controls.screen.element);\n    }\n\n    if (this.config.useGamepads) {\n      this.controls.gamepad = new GamepadControls(this.config.maxPlayers);\n    }\n    if (this.config.useKeyboardControls) {\n      this.controls.keyboard = new KeyboardControls(this.config.maxPlayers);\n    }\n\n    if (this.config.debugControls) {\n      this.debugControlsPane = document.createElement('div');\n      this.debugControlsPane.classList.add('debug-pane');\n      this.debugControlsPane.classList.add('debug-pane-controls');\n      this.container.appendChild(this.debugControlsPane);\n    }\n\n    await this.registerMode('title', new TitleMode(this));\n    await this.registerMode('numplayers', new PlayerNumberMode(this));\n    await this.registerMode('play', new PlayMode(this));\n\n    if (this.config.continuousGame) {\n      this.transition('play', 'done', 'play');\n      await this.setMode('play');\n    } else {\n      this.transition('title', 'done',\n        this.config.maxPlayers > 1 ? 'numplayers' : 'play');\n      this.transition('numplayers', 'done', 'play');\n      this.transition('play', 'done', 'title');\n      await this.setMode('title');\n    }\n  }\n\n  /**\n   * Loads an external SVG file into a symbol within the main svg element\n   *\n   * @param {string} uri\n   * @param {boolean} clearStyles\n   *  If true removes the style elements from the file\n   * @return {Promise<SVG.Symbol>}\n   */\n  async loadSVGSymbol(uri, clearStyles = true) {\n    const response = await fetch(uri);\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`Server returned status ${response.status} (${response.statusText}) loading ${uri}.`);\n    }\n    const newSymbol = this.svgDoc.symbol().svg(await response.text());\n    if (clearStyles) {\n      newSymbol.find('style').forEach(s => s.remove());\n    }\n\n    return newSymbol;\n  }\n\n  /**\n   * Initializes the input state\n   *\n   * @private\n   */\n  initInputs() {\n    this.inputs = this.createInputs();\n  }\n\n  createInputs() {\n    return Array(this.config.maxPlayers)\n      .fill(null)\n      .map(() => ({ direction: 0, action: false }));\n  }\n\n  /**\n   * Reads the input state from all enabled controller types\n   *\n   * Loads the new input state in this.input and the previous\n   * state in this.inputLast.\n   *\n   * @private\n   */\n  readInputs() {\n    this.inputsLast = this.inputs;\n    const states = Object.values(this.controls).map(c => c.getStates());\n    const inputReducer = (accInput, curState) => ({\n      direction: curState.right ? 1 : (curState.left ? -1 : accInput.direction),\n      action: curState.action || accInput.action,\n    });\n    this.inputs = this.createInputs().map(\n      (input, i) => states.map(s => s[i]).reduce(inputReducer, input)\n    );\n\n    if (this.debugControlsPane) {\n      this.debugControlsPane.textContent = this.inputs.map((ctrl, i) => (\n        `C${i}: d=${ctrl.direction} a=${ctrl.action ? 'T' : 'F'}`\n      )).join('\\u00a0\\u00a0\\u00a0\\u00a0'); // four &nbsp;\n    }\n  }\n\n  /**\n   * Game loop\n   */\n  run() {\n    let lastTs = 0;\n    const MAX_DELTA = 125;\n\n    const gameLoop = (ts) => {\n      if (!this.isPaused) {\n        this.readInputs();\n        this.currentMode.handleInputs(this.inputs, this.inputsLast);\n        this.currentMode.draw(Math.min(ts - lastTs, MAX_DELTA), ts);\n        lastTs = ts;\n\n        window.requestAnimationFrame(gameLoop);\n      }\n    };\n    window.requestAnimationFrame(gameLoop);\n  }\n\n  /**\n   * Pauses the game.\n   *\n   * While paused the main game loop not run.\n   */\n  pause() {\n    this.isPaused = true;\n  }\n\n  /**\n   * Resumes the game.\n   *\n   * Enables the main game loop.\n   */\n  resume() {\n    if (this.isPaused) {\n      this.isPaused = false;\n      this.run();\n    }\n  }\n\n  /**\n   * Registers a game mode\n   *\n   * @private\n   * @param {string} id\n   *  A name that identifies the mode\n   * @param {GameMode} mode\n   *  A GameMode subclass\n   * @return {Promise<void>}\n   */\n  async registerMode(id, mode) {\n    this.modes[id] = mode;\n    await mode.preLoadAssets();\n  }\n\n  /**\n   * Changes the current game mode\n   *\n   * @param {string} modeID\n   *  Name of a previously registered mode\n   * @return {Promise<void>}\n   */\n  async setMode(modeID) {\n    this.pause();\n\n    if (this.currentMode) {\n      await this.currentMode.handleExitMode();\n    }\n    if (this.modes[modeID] === undefined) {\n      throw new Error(`Can't change to unknown mode ${modeID}`);\n    }\n    this.currentMode = this.modes[modeID];\n    this.draw.clear();\n    this.overlay.innerHTML = '';\n    await this.currentMode.handleEnterMode();\n\n    this.resume();\n  }\n\n  transition(modeId, event, nextModeId = null, callback = null) {\n    if (this.modes[modeId] === undefined) {\n      throw new Error(`Can't define transition from unknown game mode '${modeId}'`);\n    }\n    if (nextModeId && this.modes[nextModeId] === undefined) {\n      throw new Error(`Can't define transition to unknown game mode '${nextModeId}'`);\n    }\n    this.modes[modeId].events.on(event, () => {\n      if (this.currentMode !== this.modes[modeId]) {\n        throw new Error(`Mode ${modeId} triggered the event ${event} while not active. Something was not cleaned up?`);\n      }\n      if (nextModeId !== null) {\n        this.setMode(nextModeId);\n      }\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    });\n  }\n}\n","/* globals IMAGINARY */\nimport GradientDescentGame from './game';\n\nconst defaultConfig = {\n  defaultLanguage: 'en',\n  useGamepads: true,\n  useScreenControls: true,\n  maxPlayers: 2,\n  continuousGame: false,\n  debugControls: false,\n};\n\n/**\n * Loads the config file from an external JSON file\n *\n * @param {String} uri\n * @return {Promise<any>}\n */\nasync function loadConfig(uri) {\n  const response = await fetch(uri);\n  if (response.status >= 200 && response.status < 300) {\n    try {\n      return await response.json();\n    } catch (e) {\n      throw new Error(`Error parsing config file: ${e.message}`);\n    }\n  }\n  throw new Error(`Server returned status ${response.status} (${response.statusText}) loading config file.`);\n}\n\n/**\n * Load config files and start the program\n */\n(async function main() {\n  try {\n    const config = Object.assign({}, defaultConfig, await loadConfig('./config.json'));\n    await IMAGINARY.i18n.init({\n      queryStringVariable: 'lang',\n      translationsDirectory: 'tr',\n      defaultLanguage: config.defaultLanguage || 'en',\n    });\n    // eslint-disable-next-line no-unused-vars\n    const game = new GradientDescentGame(\n      document.querySelector('.main'),\n      config\n    );\n    await game.init();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n  }\n}());\n","/**\n * Setup a wave-like animation for an svg.js shape made up of polygons.\n *\n * This animation works by applying a transformation on all points of\n * all polygons of the passed shape. The points will move on a sine wave\n * that is continuously phase shifting and whose amplitude decreases over time.\n *\n * Returns a stepping function that takes a delta in milliseconds which should\n * be called on the frame rendering function.\n *\n * Options:\n * - xAmplitude: Maximum distance that the x coordinates are shifted from their\n *   starting position.\n * - duration: Duration of the animation\n * - cycles: Number of cycles of phase shifting.\n *\n * @param {SVG.Container} shape\n *  The shape whose polygons will be animated\n * @param {Object} userOptions\n *  Options (see above)\n * @return {function(...[*]=)}\n *  Returns an animation callback that takes a delta.\n */\nexport default function WavyAnimation(shape, userOptions = {}) {\n  const defaultOptions = {\n    xAmplitude: 50,\n    duration: 5000,\n    cycles: 3,\n  };\n\n  const options = Object.assign({}, defaultOptions, userOptions);\n  const polygons = shape.find('polygon');\n  const originalPlots = polygons.map(p => p.plot());\n  const maxY = Math.max(...originalPlots.flat().map(([, y]) => y));\n\n  let counter = 0;\n\n  return (delta, ts) => {\n    if (counter > options.duration) {\n      return;\n    }\n    counter += delta;\n    const progress = Math.min(counter, options.duration) / options.duration;\n    polygons.forEach((p, i) => {\n      p.plot(originalPlots[i].map(([x, y]) => (\n        [\n          x + Math.sin((y / maxY + progress * options.cycles) * Math.PI * 2)\n          * options.xAmplitude * (1 - (progress ** 2)),\n          y,\n        ]\n      )));\n    });\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n"]}